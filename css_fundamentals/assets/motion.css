html {
	box-sizing: border-box;
	font-family: sans-serif;
	color: white;
	background-color: #121418;
	overflow-x: hidden;
}

*,
*::after,
*::before {
	box-sizing: inherit;
	font-family: 'Beleren Bold';
}

a {
	color: indianred;
}

.box {
	margin: 5rem auto;
	border: thick double #121418;
	width: 300px;
	height: 300px;
}

.card {
	margin: 2rem auto;
	border: thin solid;
	width: 700px;
	height: 400px;
}

.card img {
	width: 100%;
	height: 100%;
	object-fit: cover;
	object-position: 0 50%;
}

/*
TRANSITIONS 
transition-property: Defines the CSS properties on which the transition effect should be applied
transition-duration: Sets the time it should take for a transition animation to complete. By default, the value is 0s
transition-timing-function: Sets how intermediate values are calculated for CSS properties that are affected by a transition effect
    - linear: Transitions at a uniform speed
    - ease: Increase speed towards the middle of the transition and slow down again at the end
    - ease-in: Starts slowly, increasing the speed of transition to completion
    - ease-out: Starts transition quickly, slowing as transition continues
    - ease-in-out: Starts transition slowly, accelerates and then slows down again
    - steps( n, <jumpterm>): Displays the transition over "n" stops along the transition, showing each stop for equal periods of time
        - jump-start: Denotes a continuous function on the left, so that the first jump occurs when the transition begins
        - jump-end: Denotes a continuous function to the right, so that the last jump occurs at the end of the animation
        - jump-none: No jump at either end
        - jump-both: Includes pauses at the 0% and 100% marks, effectively adding a step during transition time
transition-delay: Specifies the time to wait between the change of a property and the beginning of a transition effect

Shorthand property: 
transition: property duration timing-function delay
*/

.transition .box {
	background-color: indianred;
	transition-property: background-color;
	transition-duration: 500ms;
	transition-timing-function: ease;
	transition-delay: 0.5s;
	transition: border-color 1s linear 1s;
	transition: all 1s ease-in-out 250ms;
}

.transition .box:hover {
	background-color: firebrick;
	border-color: darkorange;
}

.transition .card {
	transition: opacity 1s ease-out, border-color 1s steps(3),
		box-shadow 1.5s linear 2s;
}

.transition .card:hover {
	opacity: 0.75;
	border-color: firebrick;
	box-shadow: 0rem 0rem 1rem 1rem firebrick;
}

.transition .card img {
	transition: object-position 2s ease-in-out 3s;
}

.transition .card img:hover {
	object-position: 100% 50%;
}

/* TRANSFORMATIONS 2D */

.transform-2d img {
	transition: transform 2s ease-in-out;
}

.transform-2d img:hover {
	transform: none; /* Default Value */
	transform: translateX(4rem);
	transform: translateY(4rem);
	transform: translate(4rem, 4rem);
	transform: translate(-10%, -10%);
	transform: scaleX(1.25);
	transform: scaleY(1.25);
	transform: scale(-1, -1);
	transform: rotateX(90deg);
	transform: rotateY(90deg);
	transform: rotateZ(360deg); /* Clockwise */
	transform: rotate(360deg); /* Clockwise */
	transform: skewX(20deg);
	transform: skewY(20deg);
	transform: skew(20deg, 20deg);
	/*
	matrix(scaleX(), skewY(), skewX(), scaleY(), translateX(), translateY())
	https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix
	*/
	transform: matrix(1, 2, 2, 1, 20, 10);
	transform: translate(25%, -25%) rotate(225deg) skew(10deg, 10deg)
		scale(-0.5, -0.5);
}

/*
TRANSFORMATIONS 3D
It is necessary to assign a value to the "perspective" property either directly on the element or on the parent element for the 3D effects on the Z axis to work
*/

.transform-3d {
	perspective: 10rem;
}

.transform-3d img {
	transition: transform 2s ease-in-out;
}

.transform-3d img:hover {
	/* transform: perspective(10rem) translateZ(-4rem); */
	transform: translateZ(-4rem);
	transform: translate3d(2rem, 50%, -2rem);
	transform: rotateX(20deg);
	transform: rotateY(-20deg);
	transform: rotate3d(1, 1, 1, 20deg);
	/* 
	https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix3d 
	transform: matrix3d(1, 0, 0, 0, 0, 1, 6, 0, 0, 0, 1, 0, 50, 100, 0, 1.1);
	*/
	transform: rotate3d(-1, 2.5, -2, 20deg);
	transform: rotate3d(-1, 2.5, -2, 20deg) translate3d(2rem, 20%, -3rem);
	transform: rotate3d(-1, 2.5, -2, 20deg) translate3d(2rem, 20%, -3rem)
		scale3d(1.5, 1.5, 1.5);
}

/* TRANSFORMATION ORIGIN */

.transform-origin img {
	transition: transform 2s ease-in-out;
	/* transform-origin: x y z; */
	transform-origin: 50% 50% 0;
	transform-origin: 0 0;
	transform-origin: top right;
	transform-origin: 2rem 2rem;
	transform-origin: 2rem 50%;
}

.transform-origin img:hover {
	transform: rotate(360deg);
}

/* FLIP CARD */

.flip-card {
	margin: 2rem auto;
	border: thin solid #bda350;
	border-radius: 12px;
	width: 250px;
	height: 350px;
	position: relative;
	cursor: pointer;
	transition: transform 1s ease-in-out;
	perspective: 10rem;
	transform-style: preserve-3d;
}

.flip-card:hover {
	transform: rotateY(180deg);
}

.flip-card img {
	width: 100%;
	height: 100%;
	object-fit: cover;
	object-position: 0 50%;
}

.flip-face {
	position: absolute;
	width: 100%;
	height: 100%;
	backface-visibility: hidden;
}

.flip-front {
	transform: rotateY(0deg);
}

.flip-back {
	transform: rotateY(180deg);
}

/* 
SINGLE ANIMATION
Shorthand property: 
animation: name duration timing-function delay iteration-count direction fill-mode;
*/

@keyframes animation {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

.animation {
	animation: animation;
	animation-duration: 2s;
	/* https://cubic-bezier.com/ */
	animation-timing-function: cubic-bezier(1, 0, 0, 1);
	animation-timing-function: ease-in-out;
	animation-delay: 250ms;
	animation-iteration-count: infinite;
	animation-direction: alternate;
	/* At the end of the animation you are left with the final styles of the animation */
	animation-fill-mode: forwards;
	/* At the beginning of the animation, the initial styles of the animation remain */
	animation-fill-mode: backwards;
	/* both apply forwards and backwards values at the same time */
	animation-fill-mode: both;
	animation-play-state: paused; /* CSS deprecated function. Animation control via JavaScript */
	animation-play-state: running; /* Deafult Value */
	animation: animation 2s ease 250ms infinite alternate both;
}

/* TIMELINE & FRAME ANIMATION */

@keyframes frame {
	0% {
		opacity: 0;
		transform: translateX(0%);
	}
	50% {
		opacity: 0.5;
		transform: translateX(-50%);
	}
	75% {
		transform: translateX(-75%);
	}
	100% {
		opacity: 1;
		transform: translateX(100%);
	}
}

.frame {
	animation: frame 2s infinite;
}

/* MULTIPLE ANIMATIONS */

@keyframes multipleAnimation1 {
	0% {
		opacity: 1;
	}
	50% {
		opacity: 0;
	}
	100% {
		opacity: 1;
	}
}

@keyframes multipleAnimation2 {
	0% {
		transform: translateY(0%);
	}
	50% {
		transform: translateY(-100%);
	}
	100% {
		transform: translateY(0%);
	}
}

.multiple-animation {
	animation: multipleAnimation1 2s infinite, multipleAnimation2 2s infinite;
}

/* FADEIN / FADEOUT */

@keyframes fadeIn {
	0% {
		opacity: 0;
	}
	100% {
		opacity: 1;
	}
}

@keyframes fadeOut {
	0% {
		opacity: 1;
	}
	100% {
		opacity: 0;
	}
}

.fade {
	text-align: center;
}

.fade img {
	border: thin solid indianred;
	border-radius: 50%;
	width: 50px;
}

.fade-in {
	animation: fadeIn 2s linear infinite alternate;
}

.fade-out {
	animation: fadeOut 2s linear infinite alternate;
}

/* SHAKE */

@keyframes shake {
	10%,
	90% {
		transform: translate(-1px, 0);
	}
	20%,
	80% {
		transform: translate(2px, 0);
	}
	30%,
	50%,
	70% {
		transform: translate(-4px, 0);
	}
	40%,
	60% {
		transform: translate(4px, 0);
	}
}

.shake {
	text-align: center;
}

.shake img {
	width: 200px;
	cursor: pointer;
}

.shake img:hover {
	animation: shake 1s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
	transform: translate(0, 0);
}

/* PULSE */

@keyframes pulse {
	0% {
		transform: scale(1.1);
	}
	50% {
		transform: scale(0.8);
	}
	100% {
		transform: scale(1);
	}
}

.pulse {
	text-align: center;
}

.pulse img {
	width: 200px;
	animation: pulse 1s linear infinite;
}

/* SPINNER / LOADER */

@keyframes spinner {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}

.spinner {
	width: 5vw;
	height: 5vw;
	margin-left: auto;
	margin-right: auto;
	border-radius: 50%;
	border: 0.5vw solid rgba(255, 253, 253, 0.1);
	border-left-color: red;
	filter: drop-shadow(0rem 0rem 0.2rem red);
	animation: spinner 1s ease-out infinite;
}

/* ANIMATED BUTTONS */

.button-container {
	text-align: center;
}

.button {
	color: white;
	background-color: rgb(165, 42, 42);
	position: relative;
	border: none;
	border-radius: 0.25rem;
	padding: 0.2rem;
	margin: 0.5rem;
	width: 13rem;
	height: 2.5rem;
	font-size: 1.25rem;
	cursor: pointer;
	overflow: hidden;
	box-shadow: 0rem 0rem 0.5rem 0.25rem rgb(255, 0, 0, 0.5);
}

.animated-button::after {
	content: '';
	position: absolute;
	bottom: 0;
	width: 0;
	height: 0.25rem;
	background-color: red;
	transition: width 0.5s ease, left 0.5s ease, right 0.5s ease;
}

.animated-button:hover::after {
	width: 100%;
}

.to-left::after {
	left: 0;
}

.to-center::after {
	left: 50%;
}

.to-center:hover::after {
	left: 0;
}

.to-left::after {
	left: 0;
}

.to-right::after {
	right: 0;
}

.animated-button-gradient {
	background-image: linear-gradient(
		to right,
		brown,
		firebrick,
		orangered,
		darkorange
	);
	background-size: 300% 100%;
	transition: background-position 0.5s ease-in-out;
}

.animated-button-gradient:hover {
	background-position: 100% 0;
	box-shadow: 0rem 0rem 0.5rem 0.25rem rgba(255, 69, 0, 0.75);
}

/* TAB MENU */

.tabs-menu {
	color: white;
	font-size: 1.1rem;
	position: relative;
	margin-left: auto;
	margin-right: auto;
	padding: 1rem;
	border-radius: 0.25rem;
	width: 95%;
	height: 3rem;
	display: flex;
	justify-content: space-between;
	align-items: center;
	background-color: #333333;
}

.tabs-menu input[type='radio'] {
	display: none;
}

.tabs-menu label {
	position: relative;
	z-index: 1;
	width: calc(100% / 4 - 0.5rem);
	text-align: center;
	cursor: pointer;
}

.tabs-menu label:hover {
	color: white;
	text-shadow: 0rem 0rem 0.25rem white;
}

.tabs-menu input[type='radio']:checked + label {
	color: white;
	text-shadow: 0rem 0rem 0.25rem white;
}

.tab-background-hover {
	position: absolute;
	width: calc(100% / 4 - 0.5rem);
	height: 2rem;
	background-image: linear-gradient(
		to right,
		brown,
		firebrick,
		orangered,
		darkorange
	);
	border-radius: 0.25rem;
	transition: transform 300ms ease-in-out;
}

#tab-1:checked ~ .tab-background-hover {
	transform: translateX(0);
}

#tab-2:checked ~ .tab-background-hover {
	transform: translateX(100%);
}

#tab-3:checked ~ .tab-background-hover {
	transform: translateX(200%);
}

#tab-4:checked ~ .tab-background-hover {
	transform: translateX(300%);
}

/* OFF-CANVAS MENU */

.off-canvas-button {
	position: fixed;
	bottom: 1rem;
	right: 1rem;
	z-index: 999;
	width: 3rem;
	height: 3rem;
	cursor: pointer;
	opacity: 0;
}

.off-canvas-burger {
	position: fixed;
	bottom: 1rem;
	right: 1rem;
	z-index: 998;
	width: 3rem;
	height: 0.6rem;
	background-color: firebrick;
	border-radius: 0.3rem;
	transform: rotate(0deg) translate(0, -1.2rem);
	transform-origin: top left;
	transition: transform 0.5s ease, background-color 0.5s ease;
}

.off-canvas-burger::before,
.off-canvas-burger::after {
	content: '';
	display: block;
	width: 100%;
	height: 0.6rem;
	background-color: firebrick;
	border-radius: 0.3rem;
	transition: transform 0.5s ease;
}

.off-canvas-burger::before {
	transform: rotate(0deg) translate(0, -0.9rem);
	/* background-color: cornflowerblue; */
}

.off-canvas-burger::after {
	transform: rotate(0deg) translate(0, 0.3rem);
	/* background-color: olive; */
}

.off-canvas-button:checked + .off-canvas-burger {
	background-color: transparent;
}

.off-canvas-button:checked + .off-canvas-burger::before {
	transform: rotate(45deg) translate(0, 0);
}

.off-canvas-button:checked + .off-canvas-burger::after {
	transform: rotate(-45deg) translate(0.4rem, -0.5rem);
}

.off-canvas-menu {
	position: fixed;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
	z-index: 997;
	display: flex;
	justify-content: center;
	align-items: center;
	background-color: rgba(255, 69, 0, 0.75);
	transition: transform 0.5s ease-in-out;
	transform: translate(0, -100%); /* off-canvas menu above */
	transform: translate(0, 100%); /* off-canvas menu below */
	transform: translate(-100%, 0); /* off-canvas menu left */
	transform: translate(100%, 0); /* off-canvas menu right */
}

.off-canvas-button:checked ~ .off-canvas-menu {
	transform: translate(0, 0);
}

.off-canvas-menu-container {
	width: 100%;
	height: 100%;
	flex-direction: column;
	display: flex;
	justify-content: center;
}

.off-canvas-link {
	color: white;
	padding: 3rem;
	border-bottom: thin solid;
	font-size: 1.5rem;
	text-decoration: none;
	transition: background-color 0.3s ease;
}

.off-canvas-link:first-child {
	border-top: thin solid;
}

.off-canvas-link:hover {
	background-color: rgba(178, 34, 34, 0.75);
}

/* MODAL WINDOW */

.modal {
	position: fixed;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
	z-index: 997;
	display: flex;
	justify-content: center;
	align-items: center;
	background-color: rgba(0, 0, 0, 0.75);
	opacity: 0;
	pointer-events: none;
	transition: opacity 0.5s ease-in-out;
}

.modal:target {
	opacity: 1;
	pointer-events: auto;
}

.modal-container {
	position: relative;
	border: thick double firebrick;
	border-radius: 0.25rem;
	padding: 2rem;
	width: 75%;
	height: auto;
	display: flex;
	flex-direction: column;
	text-align: left;
	overflow: hidden;
	background-color: #121418;
}

.modal-container img {
	width: 50%;
	height: auto;
	border: thick double firebrick;
	border-radius: 0.25rem;
}

.modal-close {
	position: absolute;
	top: 0.25rem;
	right: 0.25rem;
	width: 3rem;
	height: 3rem;
	font-family: sans-serif;
	font-size: 2rem;
	text-align: center;
	text-decoration: none;
	line-height: 3rem;
	color: firebrick;
	transition: background-color 300ms linear, transform 300ms ease-in-out;
}

/* INTRO */

@keyframes intro {
	0% {
		transform: perspective(100vh) rotateX(15deg) translateY(100%);
	}
	100% {
		transform: perspective(100vh) rotateX(25deg) translateY(-200%);
	}
}

.story {
	margin-left: auto;
	margin-right: auto;
	width: 90%;
	height: 100vh;
	overflow: hidden;
	background-image: url('../images/phyrexian-tower.jpg');
	background-repeat: no-repeat;
	background-position: center;
	background-size: cover;
}

.story-container {
	margin-left: auto;
	margin-right: auto;
	width: 80%;
	text-align: justify;
	letter-spacing: 0.1rem;
	animation: intro 20s linear infinite;
}

.story-container h3 {
	font-size: 2.5rem;
	text-align: center;
}

.story-container p {
	font-size: 1.5rem;
	line-height: 2rem;
}
